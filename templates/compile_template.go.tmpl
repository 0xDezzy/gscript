package main

import (
  "bytes"
  "compress/flate"
  "io/ioutil"
  "sync"

  "github.com/gen0cide/gscript"
)

func main() {
  var wg sync.WaitGroup
  {{- range $_, $vm := $.VMs }}
  wg.Add(1)
  go func() {
    defer wg.Done()
    gse := gscript.New("{{ $vm.ID }}")
    gse.CreateVM()
    {{ range $_, $embed := $vm.Embeds -}}
    gse.AddImport("{{ $embed.Filename }}", {{ $embed.NameHash }})
    {{ end -}}
    gse.LoadScript(gse.Imports["{{ $vm.ID }}.gs"]())
    gse.ExecutePlan()
  }()
  {{ end -}}

  wg.Wait()
}

{{ range $_, $vm := $.VMs }}
{{- range $_, $embed := $vm.Embeds }}
func {{ $embed.NameHash }}() []byte {
  s, _ := ioutil.ReadAll(flate.NewReader(bytes.NewBuffer([]byte{
    {{- range $idx, $b := $embed.Compressed -}}
      {{- if mod $idx 12 -}}
      {{ printf "\n    " }}
      {{- end -}}
      {{ printf "0x%02x, " $b -}}
    {{ end }}
  })))
  return s
}
{{ end -}}
{{ end -}}