// Code generated by go-bindata. DO NOT EDIT.
//  memcopy: true
//  compress: true
//  decompress: once
//  metadata: true
//  asset-dir: true
//  restore: true
// sources:
//  compiler/templates/debugger.gs
//  compiler/templates/entrypoint.go.tmpl
//  compiler/templates/hard_reserved
//  compiler/templates/obfstring.go.tmpl
//  compiler/templates/preload.gs
//  compiler/templates/soft_reserved
//  compiler/templates/vm_file.go.tmpl

package computil

import (
	"bytes"
	"compress/flate"
	"io"
	"os"
	"path/filepath"
	"strings"
	"sync"
	"time"

	"github.com/tmthrgd/go-bindata/restore"
)

type asset struct {
	name string
	data string
	size int64
	mode os.FileMode
	time time.Time

	once  sync.Once
	bytes []byte
	err   error
}

func (a *asset) Name() string {
	return a.name
}

func (a *asset) Size() int64 {
	return a.size
}

func (a *asset) Mode() os.FileMode {
	return a.mode
}

func (a *asset) ModTime() time.Time {
	return a.time
}

func (*asset) IsDir() bool {
	return false
}

func (*asset) Sys() interface{} {
	return nil
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]*asset{
	"debugger.gs": &asset{
		name: "debugger.gs",
		data: "" +
			"\x4a\x2b\xcd\x4b\x2e\xc9\xcc\xcf\x53\x70\x49\x2d\xc8\xc9\xaf\xd4\xd0\x54\xa8\xe6\x52\x50\x70\x49" +
			"\x4d\x2a\x4d\x77\xce\xcf\x2b\xce\xcf\x49\xd5\xd0\xb4\xe6\xaa\x05\x04\x00\x00\xff\xff",
		size: 39,
		mode: 0644,
		time: time.Unix(1531448235, 296298138),
	},
	"entrypoint.go.tmpl": &asset{
		name: "entrypoint.go.tmpl",
		data: "" +
			"\xbc\x94\x5d\x6b\xdb\x4c\x10\x85\xef\xf5\x2b\xce\x2b\x1c\x90\x88\x2d\xbf\xcd\x65\xc0\x17\x2d\x49" +
			"\x3f\x68\x53\x0a\x6d\xd2\x8b\x90\x9a\xb5\x34\x16\x5b\xdb\xbb\xf2\xec\xca\x1f\x08\xfd\xf7\x32\x5a" +
			"\x19\xe2\x14\x0a\x2d\xc6\x37\xd2\xee\x68\xf6\x99\x73\xb4\xc3\x54\x2a\x5f\xa8\x92\xb0\x52\xda\x44" +
			"\xd1\xbc\x36\x79\xb7\x4c\x52\x34\x11\xb0\x51\x8c\x6d\x09\xb7\x37\x79\xf6\x5d\x69\xff\x8e\x6d\x5d" +
			"\x45\x40\xd3\x8c\xc0\xca\x94\x84\xc1\x74\x88\x41\xc5\x1a\xd7\x13\x0c\xb2\x7b\xa3\xd7\x5f\x58\x5b" +
			"\xd6\x5e\x93\x43\xdb\xfe\x9e\xbb\x59\x49\x6a\xa2\x4d\x41\x3b\x0c\xb2\xaf\x96\x3d\x15\x0f\x77\xae" +
			"\xa3\xa4\xe1\xc8\xb6\xcc\x5e\x17\x45\xf2\x2a\x8d\x80\xd2\x42\x54\xf5\x82\x80\x82\xe6\x24\xa2\xb2" +
			"\x1b\x6b\x28\x49\xbb\x98\x6a\x1a\x01\x67\x1f\x6e\xd0\xb6\x82\xff\x4c\xdb\xe7\xa1\x3e\x4d\xcf\x5f" +
			"\x64\x4e\x26\x30\x7a\xd9\x83\x01\x26\x5f\xb3\xe9\x36\x6d\xf7\x24\x66\xa1\x1d\x1d\xca\xfa\xcd\xdb" +
			"\xda\xe4\x5e\x5b\xf3\x91\xf6\x88\xf5\xaa\xb2\xec\xa7\xca\x39\xf2\x2e\x3e\xaa\x28\x8c\xff\x8e\xeb" +
			"\x1c\xf3\x6e\xb3\x4f\xb6\x2c\x89\xb3\x5b\x66\xcb\xf3\x24\xee\xde\x08\x48\x6d\x4a\x04\x2a\xe6\x96" +
			"\xf1\x70\x87\x0b\x77\x8d\x8b\x4d\x3c\x44\xfc\x9c\x12\x0f\xa5\x50\xfa\x27\x23\x7f\xe1\xc3\x79\x65" +
			"\x0a\xc5\xc5\x74\xa9\x67\xac\x78\x7f\x22\x47\xe6\x27\xe5\x9d\xa3\x03\x1f\x3d\xff\x2c\xde\x2a\xa6" +
			"\xa5\x55\xc5\x69\xbc\x88\xe0\x1e\x28\x86\xce\x71\x29\x46\x79\xbd\xa1\x53\x37\x57\xa0\x9e\xad\xb1" +
			"\x72\xd6\x95\x3f\xb5\x87\x40\x3d\x4b\x13\xd1\x8e\xf2\xda\x9f\xe8\x16\x02\x4c\x1c\xfc\x9b\xec\x20" +
			"\xa1\x69\x40\xa6\xc0\xe8\x30\x39\x65\x4e\xbf\xfc\xd0\xf6\xa3\xbd\x4c\x16\xe0\xda\xd0\x10\x33\x3c" +
			"\x3e\xc9\x2a\x85\xf3\x2c\x12\x44\xb9\xfc\xc1\x6e\x92\x87\x79\x3d\xeb\xed\xcc\x1e\xf5\x13\x7e\x4c" +
			"\xb0\xe8\x76\x0b\x59\x4a\x28\x0a\x2a\xd6\x72\x20\x40\x92\xff\x77\x57\x57\x52\xda\x0d\x31\xed\xc3" +
			"\xb9\x35\x9b\xec\xde\xac\x6b\xeb\x29\x59\xe3\xf2\x90\x3a\x4b\x71\x89\xb5\x24\x07\x57\x70\xa2\x72" +
			"\x3c\xc6\x68\x34\xc2\x37\x65\xca\x25\x15\x78\xaf\x34\x3b\xbc\xa1\xa5\xdd\x46\xe3\x71\x14\x45\xbf" +
			"\x02\x00\x00\xff\xff",
		size: 1711,
		mode: 0644,
		time: time.Unix(1531448235, 296686883),
	},
	"hard_reserved": &asset{
		name: "hard_reserved",
		data: "" +
			"\x4a\x2f\x4e\x2e\xca\x2c\x28\xe1\x4a\x4f\xcd\x33\x48\xce\x4c\x49\xe5\x72\x0f\x76\x0e\xf2\x0c\x08" +
			"\xe1\xf2\x0f\x09\xf1\xe7\xca\x4d\xcc\xcc\x8b\x8e\xb6\x2a\xcf\x2f\x4a\xb1\x8a\x8d\xd1\x8b\x89\xd1" +
			"\x57\x88\xd5\xb2\xe7\x72\xcd\x4b\xcf\xcc\x4b\xc5\x22\xe1\x57\x9a\x93\xe3\x93\x9f\x9e\x9e\x5a\x84" +
			"\x45\x32\x15\xac\x0b\xaa\x99\x2b\x2f\xb5\x9c\x2b\x46\x2f\x3d\xdf\x0a\x10\x00\x00\xff\xff",
		size: 130,
		mode: 0644,
		time: time.Unix(1531448235, 297205615),
	},
	"obfstring.go.tmpl": &asset{
		name: "obfstring.go.tmpl",
		data: "" +
			"\x64\xcd\xbd\x4a\x04\x41\x10\x04\xe0\xf8\xe6\x29\x8a\x61\xcc\xee\xc7\x4c\x10\x2e\xbb\xc4\x17\x30" +
			"\xf1\x0c\xda\x9b\xde\x75\x40\x7b\x96\xde\x5e\x59\x19\xfa\xdd\xc5\x09\x16\xc1\xb4\xfb\xab\xaa\xd3" +
			"\x09\xad\x21\x1d\x9f\x2e\x70\xc7\xad\x8a\x51\x91\x19\x24\x60\xb9\xe9\xf7\x64\x9c\xa1\x3c\x29\xcf" +
			"\x2c\x46\x56\xaa\xa0\x0e\xb0\x77\xc6\x6c\x5a\x64\x44\xec\xf1\x67\xfa\x58\x18\xee\x31\x7c\x91\xfe" +
			"\x6d\x3c\xe3\xe5\x55\x17\xe1\x16\x76\xad\x1d\xa0\x24\x23\x23\x95\xbc\xee\x91\xde\xf0\x78\x46\x3a" +
			"\x5e\xc8\x08\x07\xf7\xb0\xeb\xa4\x0c\xf8\xac\xb9\x1b\x3c\x6c\x77\x4c\x5a\xc4\x06\xc4\xab\x5c\x2d" +
			"\x62\xd3\x2c\xf9\xbf\xb9\x5f\xef\xd6\x3d\xe2\xef\x42\xff\xb5\xd6\x9d\x7b\xf0\x9f\x00\x00\x00\xff" +
			"\xff",
		size: 240,
		mode: 0644,
		time: time.Unix(1531448235, 297579907),
	},
	"preload.gs": &asset{
		name: "preload.gs",
		data: "" +
			"\x8c\x92\x3f\x6f\xea\x30\x14\xc5\xf7\x7c\x8a\x23\x26\xfb\xc1\x8b\xc2\x5b\xde\x90\x52\x89\x3f\x5d" +
			"\x3a\x94\x01\xb6\xb6\x83\x81\xeb\xe0\xd6\xd8\xd1\xb5\xd3\x2a\xaa\xf8\xee\x15\x09\xa0\x06\x51\xb5" +
			"\x63\x6e\xce\xf9\xdd\xa3\x7b\xac\x2b\xb7\x8e\xc6\x3b\x2c\x22\x1b\x57\x2c\xfd\xa4\x8e\x34\x66\x56" +
			"\xb5\x08\x12\x1f\x09\xf0\xa6\x18\x1b\x15\x15\x46\x78\x7c\xce\x13\x40\x7b\x86\x38\x4c\x0d\x46\xc8" +
			"\x72\x18\xdc\x20\xa4\x96\x5c\x11\xb7\x39\x4c\xbf\xdf\xfa\xd0\xb8\xd2\xb2\x0a\x5b\x11\xd2\xf5\x56" +
			"\xf1\xd4\x6f\x68\x1c\x85\x91\xf2\x80\xd9\x27\x00\x53\xac\xd8\x35\xc2\x3c\xd9\x27\xc9\x39\xcd\x39" +
			"\xc5\xd2\xb7\xc1\x84\x6a\xa9\x47\x47\x3b\x4c\x35\xfb\xdd\xf4\x48\x4e\x55\x59\xda\x5a\xb4\x7f\x06" +
			"\x50\xb2\x4b\x9c\x55\xbb\x52\xf8\xd5\x4b\x07\xd3\x7b\x72\x3d\xf4\x71\xbf\x98\x3f\xa4\xa1\x31\x1a" +
			"\x5d\x1f\x54\x03\xb8\xca\xda\x01\xfe\x5d\x50\x26\xa4\x3d\xd3\x8c\x4a\xeb\x6b\xd1\x41\x45\xae\xe8" +
			"\x62\xe3\x15\x95\x56\x36\x5c\xc8\xc6\x3a\x12\xff\x8e\x38\x77\x77\xcc\x9e\x7f\x44\x2e\x2c\x51\x29" +
			"\x02\xad\xbd\xdb\x7c\x69\x31\x44\xc5\x11\x23\x38\x7a\xc7\x4c\x45\x12\x32\x2d\x28\x2e\xcd\x8e\x84" +
			"\xfc\xae\xd8\x21\xfd\xef\x74\x6a\x34\x84\xb8\x06\xc0\xdf\x96\x2f\x71\x8b\xd3\x6a\xfc\xc1\x30\xcb" +
			"\x32\x79\x32\x03\x2b\x26\xf5\x9a\x37\x1f\xfb\xe6\x0d\x74\x0f\xb6\xaa\x8a\xa9\x77\xc1\x5b\xba\x7a" +
			"\x8a\xcf\x00\x00\x00\xff\xff",
		size: 685,
		mode: 0644,
		time: time.Unix(1531448235, 297781319),
	},
	"soft_reserved": &asset{
		name: "soft_reserved",
		data: "" +
			"\x4a\xcf\xcf\x4f\xcf\x49\xe5\x4a\xcf\x2f\xc8\x4e\xe7\x0a\x0d\x88\xe0\xca\x2f\x29\xc9\xe7\xf2\x2f" +
			"\x29\xc9\x07\x04\x00\x00\xff\xff",
		size: 26,
		mode: 0644,
		time: time.Unix(1532895396, 507410995),
	},
	"vm_file.go.tmpl": &asset{
		name: "vm_file.go.tmpl",
		data: "" +
			"\xec\x5a\xff\x4f\xe3\x48\xb2\xff\x99\xfc\x15\xf5\xfc\xe0\xc9\x19\x19\x67\x66\xf5\xf4\x9e\xc4\x1d" +
			"\x27\x01\xc9\xce\xb2\xc3\xc0\x88\xb0\xac\x4e\x2c\x62\x3a\x76\xc5\xf4\xe0\xb4\xbd\xdd\x9d\x40\x06" +
			"\xe5\x7f\x3f\x55\x77\xfb\x6b\x1c\xc8\xec\xac\xee\x74\xd2\xfd\x30\x9a\x60\x57\xd7\xf7\xfa\x74\x75" +
			"\xb5\x73\x16\x3d\xb0\x04\x61\xc6\xb8\xe8\xf5\xf8\x2c\xcf\xa4\x06\xbf\x07\xe0\x4d\x96\x1a\x95\xd7" +
			"\xdb\xf1\xa2\x6c\x96\x4b\x54\x6a\x90\x7c\xe5\xb9\x47\xaf\x22\xb9\xcc\x75\x36\x60\xf4\xbe\xfa\x33" +
			"\xe2\xf9\x3d\x4a\x5a\x81\x22\xca\x62\x2e\x92\xc1\x84\x29\xfc\xbf\xff\x35\x44\xd3\x99\xa6\x57\x3c" +
			"\xf3\x7a\xf4\x67\xc2\xf5\xfd\x7c\x12\x46\xd9\x6c\x90\xa0\x78\x1b\xf1\x18\x07\x89\x8a\x24\xcf\xf5" +
			"\x00\x45\xc2\x05\x7a\x2d\x32\x99\x4d\x50\xea\x07\xc9\x67\x28\x06\x99\xd6\x19\x11\x3c\x3f\x03\x9f" +
			"\xc2\x6e\xf8\x13\x53\x43\x9c\xcc\x93\x84\x8b\x64\x24\xd8\x24\xc5\x18\xf6\x57\xab\x1e\xc0\x2b\xb2" +
			"\x62\xb3\x8a\xd4\x26\x66\xfb\x80\x22\x06\xb3\xae\xc6\xf9\x2c\xfb\x76\xbe\x69\x46\x5c\x07\x4a\x33" +
			"\x11\x33\x19\xb7\xd8\xf7\x00\x06\x03\x38\x35\xde\xe6\x22\x81\x19\x53\x0f\xca\x0a\x95\x4c\x24\x08" +
			"\xbb\x3c\x0f\x60\x77\xc6\xe1\xe0\x10\x76\xc3\x33\x2e\x1e\x50\x86\x1f\x99\x7a\xc0\xd8\xae\x52\xe0" +
			"\xb4\x78\x7e\x26\xba\xf0\x1c\x1f\x8f\x52\xce\xe8\x31\x78\xf4\x8c\xe7\xb0\x5a\x39\x17\x39\xa9\xfd" +
			"\x5e\x6f\xc1\xa4\x89\x2e\xe9\xe2\x24\xdd\x05\xb0\x8b\xb3\x09\xc6\x56\xd6\x88\x7e\x96\xdc\x07\x03" +
			"\x23\xc0\xbc\x0f\x4f\x87\xc4\xfd\x3e\x4b\x63\x05\xfa\x1e\x21\x66\x9a\xc1\x34\x93\x60\x5e\xc7\x18" +
			"\xc3\x94\xa7\x58\x5b\x70\x21\x79\x72\xce\x66\x58\xd7\xb5\xce\xea\xd0\xaa\x6a\x1f\x0d\x89\x1b\xa9" +
			"\xdc\x74\x55\xbf\xd7\x73\x4a\xb8\x45\x8f\x92\xe5\x56\x7e\x82\x02\x15\x57\x70\xfd\xd1\x68\x61\x68" +
			"\x0a\x71\x7a\x99\x63\x7d\x95\xd2\x72\x1e\x69\x78\xee\x01\x8c\xe0\x8d\xcd\xb0\x70\x64\xfe\xeb\x01" +
			"\x7c\x80\x9b\x5b\xca\xf7\x2d\x33\x6a\x08\x6f\x8a\xbc\x09\x87\xee\x47\x53\xeb\x95\xd1\xfa\x1c\x1f" +
			"\x6b\x2a\x44\x12\x99\xc6\xa6\xea\x72\x2e\x34\x9f\xa1\xd1\xdf\x66\x4e\xd3\x8c\xe9\x5c\x44\x4d\x36" +
			"\x7e\x1f\xde\xd4\x98\x92\x41\x1a\x29\x74\xce\xa6\x73\x7c\xf4\xbd\x3a\x0f\x2f\xb0\x5e\xb6\x0b\xbc" +
			"\xc0\x0a\x78\x8f\xfa\x8a\xcf\x30\x9b\x6b\x58\xad\x02\xf0\x46\x4f\x18\xcd\x35\x7a\xfd\xad\x52\x9f" +
			"\xa5\x24\xb1\x48\x6e\x92\x39\x76\xbf\xcf\x4c\xde\xfb\x82\xa7\x01\x78\xae\x90\x0b\x05\x2a\x85\xa6" +
			"\x2c\x55\xe8\xfe\xeb\x1b\x8e\x1a\xc3\x31\x6a\xb7\x9a\xa5\xfd\x17\xca\x71\x2d\x2c\x4e\xa9\xd8\xb8" +
			"\xa1\x0c\x0c\x39\x42\x63\xbf\x51\x01\x00\x19\xd1\xfc\x4f\xe5\x8f\x67\xb3\x74\x74\x00\x1a\x83\x22" +
			"\x47\x5f\x8d\x3f\xc0\xf0\x00\xe2\x72\x41\x4d\x4d\xfa\x27\x51\xcf\xa5\x80\xcc\x25\x81\x91\xf5\xe3" +
			"\x5c\x44\x9a\x67\xe2\x03\x2e\xc1\xb3\x28\x7b\xc7\x94\x42\xad\x3c\x8a\x22\x77\x35\x6d\x1f\x01\x17" +
			"\x3a\xfb\xf6\x34\xf1\xb3\x7a\x66\xf4\xb7\x11\xec\xf7\x01\xa5\xa4\xda\x69\x80\x0f\xf2\xb8\x13\x14" +
			"\xf6\x5b\xa8\xc0\x63\x5b\xc5\x9b\x2b\x3e\x0b\x47\xa1\x03\xac\x1b\xaf\x5a\xe3\xdd\xc2\x21\x90\xd2" +
			"\x7e\xdf\x55\x1e\x3c\x3b\xcf\x0e\x06\xf0\x8b\xa0\x5d\x09\xa5\x29\xf5\x9c\xfe\xe7\xfa\x1e\xa2\x4c" +
			"\x28\x0d\x31\x46\x29\x93\x18\x03\x9b\x64\x0b\x74\x6b\x9c\xc7\x2b\xe3\x87\x7e\x0b\x6a\x82\x36\xf6" +
			"\x5c\x0c\x3f\xf8\x7d\x9b\x7a\xab\x2a\x45\xac\x81\x8e\x9d\xe0\xe9\xc6\x10\xe6\x12\xd3\x8c\xc5\x8d" +
			"\xe0\x51\xc0\x8a\x40\xb9\xf7\x90\xf2\x89\x64\x72\xf9\xbd\x81\xab\x89\x6b\x84\xac\x48\xb5\x70\x14" +
			"\x9e\x65\x2c\x1e\x1b\x09\x7e\x41\x1e\x26\xca\x0b\x9a\x21\xb8\xbb\xfb\x74\x39\x3a\xbb\x38\x1a\x7a" +
			"\xb7\x64\xfe\x2b\x19\x6a\x35\x36\x46\x12\x3f\x6b\x62\x87\x19\xeb\x09\x7b\xfd\xf1\x1b\x73\xb2\x12" +
			"\xb5\x8d\x81\x2d\x38\x69\x99\x38\x3a\xbf\xba\xfc\xfb\xa7\x8b\xd3\xf3\xab\x97\xad\x44\x87\x79\x64" +
			"\x81\xfb\xbd\xb6\xb1\x30\x6d\x9e\xa0\xd0\x72\x09\x79\xc6\x85\x06\x3f\xc6\x29\x17\x18\xc3\x64\x09" +
			"\x0b\x94\x8a\x67\x22\x80\xb9\x9a\xb3\x34\x5d\xc2\x10\xf3\x34\x5b\x92\xd4\x2d\xed\xaf\x29\xd1\xae" +
			"\xc6\x57\x71\x28\x0b\x87\xe1\xa9\xf8\x82\x91\x36\x24\x27\x99\x50\x59\x8a\xfe\x1a\x78\x92\x7f\xec" +
			"\xda\x23\x53\xfa\x86\xe2\x2e\x20\x69\x54\xdf\xf4\xfa\x84\xa5\x69\xa1\xd7\xaf\x5c\xdf\xbb\xcd\xc1" +
			"\xf7\xac\x41\x66\x5f\xe0\x53\xb3\xe2\xbf\x0e\xa9\x34\x5c\xc1\xe6\x4c\xf0\xc8\x47\x29\xfb\x4d\xf4" +
			"\x43\x29\x5f\xcb\x2e\xc1\x34\x5f\x58\xef\x73\x63\x84\xeb\x2a\x96\x82\xcd\x78\x64\xbc\x99\x52\xe3" +
			"\x13\x83\xa5\x34\x80\x41\x4c\x54\x57\xbe\xfd\x49\xd8\x58\x29\xd5\x88\x06\xf5\x4d\x64\xbb\x79\xd2" +
			"\x03\xf3\xdb\xb8\xc1\xb5\x72\xfb\xfb\x70\x3c\x7a\x7f\x7a\x0e\xe7\x47\x57\xa7\xd7\x23\xf8\x74\x74" +
			"\xf2\xe1\xe8\xfd\x08\x4e\x3f\x7e\xba\xb8\xbc\x1a\x37\xd0\x55\xa8\x00\x76\xf3\x87\xc4\x42\xeb\xfb" +
			"\xec\x93\x6d\xc1\x8f\x97\xa4\xb1\xca\x59\x84\x75\xa0\xad\x9a\x44\xd2\x39\x7f\x48\x5c\xa6\x7f\x62" +
			"\xfa\x9e\x5c\x37\x17\x31\x4a\x10\xe5\xd2\x82\xca\x36\x8b\x45\x81\xfa\x99\xe4\x09\x17\xc6\xa9\x8f" +
			"\x4c\x19\x2a\x41\x5d\x9e\x85\xc0\x3b\x91\x77\xaf\xa3\xcd\xb2\x68\x2c\x8c\x67\x9c\xb2\x05\x5a\x57" +
			"\xba\x1c\xd8\x4d\x7e\x4d\x41\x2f\x70\xa4\xc4\xb2\x46\x54\x56\xaf\x7b\x3d\x5e\xce\x26\x59\x7a\x45" +
			"\x49\x7a\x00\x33\x96\xdf\x28\x2d\xb9\x48\x6e\xdf\x34\xc4\x53\xc8\x9e\x57\xc5\x9a\xab\x65\x8e\xea" +
			"\x05\x6a\x7a\x5f\x51\x53\x79\xe8\x97\xc8\x0d\x41\x45\x7f\xcd\xe4\x4b\xd4\xd7\x4c\x16\xb4\x65\x77" +
			"\xeb\x22\x3c\xe5\xf1\x53\x00\xbb\x53\x13\x61\x32\x76\x3c\x8f\x22\x54\x6a\x3a\x4f\xd3\xa5\x69\xe6" +
			"\x63\x32\x44\xd5\x1a\x8a\xc1\x00\x8e\x62\x3a\x33\x95\x59\x6e\xd1\x06\xa5\x49\xec\x56\x05\x40\xcb" +
			"\x8b\x21\xfd\x3d\x2d\x13\x9a\x22\xa7\x33\x50\xc6\xa5\xa0\xc9\xa7\x4e\xcc\x9d\x98\x76\x06\xda\xac" +
			"\xe7\xf1\x53\x67\xcc\x8d\xd3\x1d\x83\x46\x1c\x1b\x12\xcb\x48\x02\x8c\x79\x22\x98\x9e\xcb\x8a\xae" +
			"\x7c\xd2\x24\xa4\xe5\x07\x90\x85\xb5\x7e\xcc\x90\xdb\x3d\xdb\x91\xad\x4a\xdd\xbb\x93\x34\xac\xa5" +
			"\xce\x4d\x87\x5e\xd4\x6b\x6c\x61\x77\x11\xc3\xaa\x0f\xa8\x87\x94\x4e\x49\xba\x8c\xe7\xfb\xcc\xa4" +
			"\x5e\x33\x7e\x43\xd3\x9a\x50\x08\x19\x98\xe3\x07\x33\x07\xb2\xe2\x68\xd2\x0e\x97\x0e\xeb\x8d\x12" +
			"\x99\xa7\x37\xaa\xa8\x43\xc2\xa8\xae\xd8\x98\x14\xef\x8a\x8d\x5e\xab\x30\x80\x1f\x59\xa4\x33\xb9" +
			"\x5c\xf7\x78\xc1\xbf\x46\xca\x31\x8d\x5f\x4a\x7f\x43\xf0\xbc\x7d\x90\x8c\xc3\x6e\x5a\xaa\xd9\xd0" +
			"\xbc\x6e\xf7\xcb\xb1\x89\x6c\xb9\x45\xb5\xf0\xd8\x5a\xaf\xc5\xe7\x4e\x44\x1b\xa5\x44\x1b\xbd\x6b" +
			"\x11\xa1\xcb\xbd\x51\x87\x7b\xaf\x59\x3a\xc7\x83\x6e\x04\x0e\x1b\x8b\xb6\xf6\x9a\xb5\xc3\xba\x2d" +
			"\xb2\x79\xea\x9c\xf6\xba\x39\x2f\x3b\x6d\x61\x9d\xb6\x60\xa5\xd7\xae\x59\xca\x63\x02\xbd\x86\xdb" +
			"\x16\x1b\xe5\x2c\xd8\x46\xbf\x11\x36\x76\x79\x6d\xc1\x3a\xdc\x56\x43\x8b\xcf\x8e\xa8\x0e\x17\x9f" +
			"\xbf\xc1\xc1\x15\xff\xad\x3d\x4c\x06\xdf\xb4\x95\xb3\x2e\xde\xc2\xf4\xb6\x8f\xcb\x5d\xdb\x34\x34" +
			"\x84\x05\x0e\xb9\x8b\x39\x5b\x57\xa7\x4c\x6b\x6c\x43\x51\x35\xb2\x8d\xdd\xd6\x36\xbc\x66\xbf\xf6" +
			"\x82\x8d\xa6\xd8\xad\xbc\xab\x49\x6b\x74\x65\xd6\x2b\x85\xa2\xfb\xfb\xbd\xf6\xf1\xc7\xb6\x33\xa3" +
			"\xf3\xe1\xe6\x66\x66\xfb\x26\xaf\x98\x11\xdc\xb9\x93\xd0\x36\xed\x5e\xb1\xa6\x3a\x3d\xfd\x13\x1a" +
			"\xbf\x2e\x45\xb7\x6c\x01\x01\x84\xce\xa9\x08\x6e\x5a\x18\x59\x34\x4b\xab\xef\xee\x12\x5d\xe7\x5f" +
			"\x4e\x59\xf8\x44\x75\x37\x89\x05\x05\x9c\x39\xdf\x39\x1d\x0e\xaa\x96\xef\x5f\xd1\xf1\xb9\xdc\xfd" +
			"\xc3\xbd\x9e\x4b\xd8\xff\xb4\x58\xff\xde\x2d\x56\xd7\x96\x44\xb5\x73\x08\x2c\xcf\x51\xc4\xbe\xd0" +
			"\xf9\xcb\x00\xd7\xc4\xda\x06\xd2\xae\xc1\x46\x37\xd6\xb6\x91\xb6\x56\x53\xb4\x8a\x54\xd8\x74\xd8" +
			"\x6d\xa0\xe8\xfa\xa4\xa8\xd9\x2d\x6e\x1a\x9f\xad\x8f\xd4\x2f\x86\x1f\x1c\x27\x07\x89\x68\x6e\x54" +
			"\xc8\xb7\x0f\x68\x67\x47\xf4\xb8\x3d\x3d\x37\x63\xbc\x1e\x98\x8c\xed\x1c\x6f\x35\x47\x6b\xb5\x21" +
			"\x59\x83\xf0\x72\xd8\x73\xf5\xd5\xa5\xd9\xe5\x10\xa2\x4c\x68\xc6\x5f\xd6\x0d\x85\x79\x8c\xf1\x46" +
			"\x2d\x09\x3e\xbb\xb8\x1f\x3a\x2d\x9f\xcb\x61\x6a\x71\x03\x62\x0a\x7c\x62\x3c\x68\x17\x8d\x44\x21" +
			"\x9b\x80\xbb\x2a\x6c\x5a\xc4\xa7\x30\xcb\x62\xb3\x0a\xfe\xbf\xf6\xce\x64\x4c\x2e\xb9\xd0\x53\xf0" +
			"\x7e\x13\xbf\x99\x11\x53\x6d\x5d\x3d\x13\x1b\xb4\x6f\x9f\xf6\x9e\x02\xf0\x48\x83\xfd\xe6\x3e\xef" +
			"\x06\xbd\xf5\x4c\x6c\xdc\x50\x0c\x81\x97\xbe\xca\x9a\x78\xd3\xb8\x2c\x71\xc3\xde\x17\xb7\xaf\xfa" +
			"\x48\x53\x81\x85\xc9\x00\x1e\x9c\xcf\x1a\x11\x9e\x94\xf3\x1c\x86\x2a\x3c\xc7\xc7\x13\x73\x1f\xe7" +
			"\x3f\xbc\x92\xcd\xce\xfd\xc5\xf4\x3a\x9e\xbc\x23\x1e\x02\x1f\x7d\x73\x03\x18\x1e\xcf\xa7\x53\x34" +
			"\xe3\x9d\x78\xf2\x43\xf7\xab\x1d\x25\x4d\xf3\x6d\x9f\x9e\xe3\xe3\x25\xb2\x18\xa5\x6f\x59\xfb\xca" +
			"\x0c\x5a\x29\x01\xf8\x02\x6e\x48\xbb\xe3\x34\x8b\x1e\xc6\xfc\x2b\x16\xb7\x2e\x4a\x4b\x64\x33\xe2" +
			"\x61\x6f\x11\x89\xc9\xc5\x8f\xc7\xfe\x24\x00\xbe\xb8\x39\xb8\xed\xf7\x76\x8c\x37\xd1\x18\x68\xaf" +
			"\x15\x89\x66\x68\x1f\xfa\xee\xc9\x58\xc7\x23\x77\xf7\x18\x80\x92\x11\xc9\x45\x11\x59\x75\x0c\xea" +
			"\x3a\xf6\x63\x23\xcf\x3e\x7f\x1e\x1f\x38\xf9\x01\x5c\x1e\x80\x93\xb3\xb2\x5e\xab\xa6\x64\x3c\x0b" +
			"\x4f\xb2\x7c\xe9\xc7\x93\x77\x41\xc5\xb4\xff\x97\xed\x1c\xbb\x93\x7c\x95\x25\xab\xe4\x2b\xcf\x6b" +
			"\x6e\x8a\x27\xef\xfa\xbd\x9d\x76\x88\x76\x76\xda\x7c\x76\x56\xbd\x1d\xa7\x4f\x5d\x9d\x1f\x02\x48" +
			"\xbe\xca\xad\x39\x24\x5f\x65\x78\x92\x66\x0a\xfd\x7e\xaf\x20\x88\x27\x3f\x84\xc7\x14\x3c\xbf\x98" +
			"\x96\x56\x87\xd9\x61\xad\x41\xb3\x1b\x2b\x94\xd0\xff\xab\x1d\xd0\xab\x16\xf4\x4d\x1b\xd7\x96\x9b" +
			"\x76\xe6\xb5\xc2\xa9\x6d\x4c\x45\x09\x99\x8e\x50\x36\x0b\xc8\x92\x95\x73\xb3\xcd\x1b\xf4\x0b\x1d" +
			"\x60\x5b\x9e\x4f\xf6\x41\xa6\x75\x56\x32\x38\x61\x69\xda\xb7\x8f\xcc\xb9\xc3\x04\x97\x7a\x08\x99" +
			"\xcc\x67\x28\x34\x8c\x99\xe0\x7a\x09\x27\xf7\x18\x99\xcb\x5b\x3e\x85\x14\x85\xe1\x14\x16\x44\x67" +
			"\x5c\xe9\x3e\xfc\x8d\x84\xa6\x28\xac\xde\x47\x32\x51\xc5\xd5\x5d\x63\xc2\x7d\xc9\xb8\x42\xdf\x63" +
			"\x6e\xad\x17\x80\xa7\xb3\x0c\x66\x4c\x2c\xa1\x78\xa8\x20\x27\xdc\x88\xa9\xf9\x28\xbd\xb2\xa7\x8a" +
			"\x3b\xb6\xe6\xb6\x5c\xcc\x64\x37\x6b\xf6\xd7\xef\xd2\x6c\x8a\x8f\xdf\xa3\x58\xa3\xdf\x65\x16\xef" +
			"\xed\x71\xb4\x54\xa6\xd6\xe3\xda\x46\xa9\xca\xbd\x32\x0e\xff\x4d\xfc\x59\x6d\x88\x43\x48\xc3\x6a" +
			"\x0f\x4d\xc8\x59\x38\x7a\xd2\x63\x9e\x14\x44\xb2\x4e\x51\x56\x66\xc3\x45\x7e\x8d\xa2\x1f\x8e\x9e" +
			"\xa8\x5b\xf0\xb7\x38\x65\xd5\x3c\xf6\x45\xa1\x59\x46\x6e\x88\xb2\x79\x1a\x83\xc8\x34\xd8\x67\xa5" +
			"\xeb\x60\x2f\x86\x6c\xda\xf2\x5a\x43\xbb\x0d\x2e\x2c\x1a\x37\xf5\xc8\x75\x74\x0f\x0b\xb2\xa0\x61" +
			"\x57\xe8\xeb\x65\x8e\x7d\x78\xae\x5d\x6d\xe2\xef\x35\x67\x78\x37\xb7\xa6\x03\x9e\xb2\x08\x9f\x57" +
			"\xb5\xbd\x31\x62\x0a\xe1\xe6\xd6\xee\x38\x07\xe5\x66\xca\xa7\xca\x1e\x74\x6a\xab\x9e\xab\xbd\x96" +
			"\xca\xf3\x2e\x80\x27\xab\x08\xc5\x75\x01\x55\x5b\x6b\x97\x97\xbd\x1e\x9f\xaa\x00\x9e\xfa\xe5\xeb" +
			"\x8a\x4d\x23\x78\x87\xb4\x6a\x6d\xff\x2d\x2f\x48\x58\x78\x8e\x18\xab\x8f\x2c\xcf\x09\xad\x9a\x06" +
			"\xd8\xc0\xd3\x3b\x8c\xaf\x96\x39\x16\x9f\x48\x1c\x6c\x12\xd5\xca\x14\x7f\xd1\xef\x90\x5c\x63\x5d" +
			"\x52\x16\x1c\x5b\xfc\x5a\xd1\x68\x2d\xea\x37\x0d\x39\x9e\xf3\x54\x9f\x8a\x2b\xc9\x84\x4a\x19\x05" +
			"\xfa\x12\x7f\x9f\x73\x59\x5d\x71\x37\x64\x3b\xf2\x9f\xc7\x64\xd9\x77\x1b\x15\xe3\x94\xcd\x53\x7d" +
			"\xb0\x31\x95\xcd\x48\x33\xca\x84\xbb\xf2\xa2\x8c\x2e\x13\xd8\xbc\x9b\x71\x35\x63\x94\x87\xfb\x94" +
			"\xe0\x18\x51\x37\xb8\xa7\x02\x48\x32\x0d\x7b\x57\x05\x10\xd4\x14\xf1\x02\x58\xac\x5d\xc1\xae\x5a" +
			"\xb8\x20\xc9\x8c\x00\x76\x65\x09\x0c\x97\xae\x55\x7e\x01\x1b\x2c\x89\x45\x06\xd9\x42\x06\x59\x7b" +
			"\x68\x5c\x23\x1b\xc8\xd0\x38\x9d\x98\xd7\xa8\xcf\x50\x90\xf4\x12\x27\x0b\x0d\x6a\x5f\x26\x24\xba" +
			"\xa4\x7c\x5b\xfb\x78\x86\x36\x11\xb3\x91\xb5\x4e\x97\xe5\xe7\x30\xd3\xf0\x3d\x0a\x94\x4c\xa3\x65" +
			"\x3a\x36\x05\x07\x9e\xf4\xaa\xd8\xd5\x37\xbb\xf5\x99\x57\x03\x16\xfc\x26\xcf\x23\x99\x14\x0c\x99" +
			"\xd7\x4a\x38\xc2\x01\xa7\xf1\x3b\xa8\x1f\x92\xc7\x5c\x24\x29\x16\x19\x40\xdd\x3f\x3e\x69\xd8\x07" +
			"\xa6\x35\xce\x72\x4d\x00\xef\xde\xe9\x7b\x66\xfe\x74\x33\x2c\x93\x35\xd7\x2c\x6d\xa2\xe9\x05\xed" +
			"\xa0\x57\x99\xd9\x43\x7d\xf9\xb6\xa8\xf7\x6e\x04\xed\x4a\x3c\xfb\xc4\x22\x68\x91\x7d\x30\x65\x3c" +
			"\xc5\xd8\x00\x8e\x5b\xf1\x16\x0c\xd8\x1d\xee\x5d\xf5\x61\x1f\xf6\x16\x5e\x00\xf2\xad\x51\xa5\xdf" +
			"\x3a\xe5\xba\x05\x56\xd9\xb2\x14\x52\x85\x0d\x37\x5c\xdd\x73\x55\x61\xf2\x3d\x53\x30\x9b\xa7\x9a" +
			"\xe7\xa5\x6b\x14\xec\xbb\x49\x16\x39\xd8\x1c\x36\x19\xfc\x3c\x06\x26\x25\x73\x37\xfe\x9d\x9e\x8c" +
			"\xb2\x59\xce\x34\x9f\xf0\x94\xeb\xa5\x93\xf7\x45\x5d\x4c\xbe\x74\xf8\xed\x62\x42\xfc\xfd\xcf\x37" +
			"\xb7\x9f\xff\x80\xe3\xec\xc7\x08\xcd\xbd\xc7\x7e\x85\x54\xd9\xc2\x94\xe2\x89\x30\x55\x6c\xbf\x91" +
			"\x9a\x4b\x2c\xfc\xd7\xf0\x5d\x75\x44\xaa\x55\x66\x00\xbb\x77\x1b\x0b\xd3\x39\xd2\x15\xa3\x6d\xa2" +
			"\xd6\x4a\xb2\x1a\x7e\x1a\x1f\x84\x63\x74\xf7\xfb\x8e\x88\xc2\x58\xfb\xb3\x5f\xdb\x8a\xba\xfd\xf0" +
			"\x1d\x29\xb4\x17\xaf\xe7\x50\x4d\x76\x53\x93\x86\x7b\xaa\xe4\x6a\xa2\x6a\xdd\x01\xc5\x24\x82\x0a" +
			"\x33\x86\xcc\x44\xb6\x99\x91\xd6\x03\xb6\x52\xfa\xeb\xb3\x92\x56\x96\x76\xe6\xa8\x28\x8a\x53\x05" +
			"\x26\x8d\x8c\xd4\x92\x82\x89\xb8\x90\x35\x17\xee\x33\x86\xb0\x8e\x45\x7f\x2a\xce\x14\x71\xa0\x44" +
			"\xfe\xa5\x10\x57\x59\x57\xb3\xcd\x0e\x4f\x0a\xf8\xff\xe6\xab\xf2\x6a\x81\x16\x1b\xef\xe9\xd6\x8e" +
			"\x1a\xe5\xa5\x9a\xfb\xa6\x48\x01\x13\xc0\xcc\x59\x85\x4f\xd2\x12\xb2\xcd\xde\xe6\xe2\x96\xc9\xcd" +
			"\xd7\x79\xdb\x9e\x38\x0a\xb1\xdb\x1e\x39\x16\xf6\x63\x3b\x3a\x75\x6f\xbe\xf8\x30\xd2\xfb\xbd\x2d" +
			"\x10\x78\x61\x3f\xae\x7b\x61\x20\xf0\xa7\x40\xef\xc2\x29\xd1\xfa\x2c\xc4\x61\x6e\x15\x6f\x17\xbe" +
			"\xe2\x27\xe5\x34\x23\xd0\x8c\xe1\x27\xc6\xa5\x82\x09\xa6\xd9\x63\xcf\xcc\xce\xf7\xff\x11\x00\x00" +
			"\xff\xff",
		size: 11436,
		mode: 0644,
		time: time.Unix(1546203974, 158855069),
	},
}

// AssetAndInfo loads and returns the asset and asset info for the
// given name. It returns an error if the asset could not be found
// or could not be loaded.
func AssetAndInfo(name string) ([]byte, os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	a.once.Do(func() {
		fr := flate.NewReader(strings.NewReader(a.data))

		var buf bytes.Buffer
		if _, a.err = io.Copy(&buf, fr); a.err != nil {
			return
		}

		if a.err = fr.Close(); a.err == nil {
			a.bytes = buf.Bytes()
		}
	})
	if a.err != nil {
		return nil, nil, &os.PathError{Op: "read", Path: name, Err: a.err}
	}

	return a.bytes, a, nil
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	data, _, err := AssetAndInfo(name)
	return data, err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}

	return names
}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	return restore.Asset(dir, name, AssetAndInfo)
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	return restore.Assets(dir, name, AssetDir, AssetAndInfo)
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree

	if name != "" {
		var ok bool
		for _, p := range strings.Split(filepath.ToSlash(name), "/") {
			if node, ok = node[p]; !ok {
				return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
			}
		}
	}

	if len(node) == 0 {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	rv := make([]string, 0, len(node))
	for name := range node {
		rv = append(rv, name)
	}

	return rv, nil
}

type bintree map[string]bintree

var _bintree = bintree{
	"debugger.gs":        bintree{},
	"entrypoint.go.tmpl": bintree{},
	"hard_reserved":      bintree{},
	"obfstring.go.tmpl":  bintree{},
	"preload.gs":         bintree{},
	"soft_reserved":      bintree{},
	"vm_file.go.tmpl":    bintree{},
}
