// Code generated by go-bindata. DO NOT EDIT.
//  memcopy: true
//  compress: true
//  decompress: once
//  metadata: true
//  asset-dir: true
//  restore: true
// sources:
//  compiler/templates/debugger.gs
//  compiler/templates/entrypoint.go.tmpl
//  compiler/templates/hard_reserved
//  compiler/templates/obfstring.go.tmpl
//  compiler/templates/preload.gs
//  compiler/templates/soft_reserved
//  compiler/templates/vm_file.go.tmpl

package computil

import (
	"bytes"
	"compress/flate"
	"io"
	"os"
	"path/filepath"
	"strings"
	"sync"
	"time"

	"github.com/tmthrgd/go-bindata/restore"
)

type asset struct {
	name string
	data string
	size int64
	mode os.FileMode
	time time.Time

	once  sync.Once
	bytes []byte
	err   error
}

func (a *asset) Name() string {
	return a.name
}

func (a *asset) Size() int64 {
	return a.size
}

func (a *asset) Mode() os.FileMode {
	return a.mode
}

func (a *asset) ModTime() time.Time {
	return a.time
}

func (*asset) IsDir() bool {
	return false
}

func (*asset) Sys() interface{} {
	return nil
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]*asset{
	"debugger.gs": &asset{
		name: "debugger.gs",
		data: "" +
			"\x4a\x2b\xcd\x4b\x2e\xc9\xcc\xcf\x53\x70\x49\x2d\xc8\xc9\xaf\xd4\xd0\x54\xa8\xe6\x52\x50\x70\x49" +
			"\x4d\x2a\x4d\x77\xce\xcf\x2b\xce\xcf\x49\xd5\xd0\xb4\xe6\xaa\x05\x04\x00\x00\xff\xff",
		size: 39,
		mode: 0644,
		time: time.Unix(1531448235, 296298138),
	},
	"entrypoint.go.tmpl": &asset{
		name: "entrypoint.go.tmpl",
		data: "" +
			"\xbc\x94\x5d\x6b\xdb\x4c\x10\x85\xef\xf5\x2b\xce\x2b\x1c\x90\x88\x2d\xbf\xcd\x65\xc0\x17\x2d\x49" +
			"\x3f\x68\x53\x0a\x6d\xd2\x8b\x90\x9a\xb5\x34\x16\x5b\xdb\xbb\xf2\xec\xca\x1f\x08\xfd\xf7\x32\x5a" +
			"\x19\xe2\x14\x0a\x2d\xc6\x37\xd2\xee\x68\xf6\x99\x73\xb4\xc3\x54\x2a\x5f\xa8\x92\xb0\x52\xda\x44" +
			"\xd1\xbc\x36\x79\xb7\x4c\x52\x34\x11\xb0\x51\x8c\x6d\x09\xb7\x37\x79\xf6\x5d\x69\xff\x8e\x6d\x5d" +
			"\x45\x40\xd3\x8c\xc0\xca\x94\x84\xc1\x74\x88\x41\xc5\x1a\xd7\x13\x0c\xb2\x7b\xa3\xd7\x5f\x58\x5b" +
			"\xd6\x5e\x93\x43\xdb\xfe\x9e\xbb\x59\x49\x6a\xa2\x4d\x41\x3b\x0c\xb2\xaf\x96\x3d\x15\x0f\x77\xae" +
			"\xa3\xa4\xe1\xc8\xb6\xcc\x5e\x17\x45\xf2\x2a\x8d\x80\xd2\x42\x54\xf5\x82\x80\x82\xe6\x24\xa2\xb2" +
			"\x1b\x6b\x28\x49\xbb\x98\x6a\x1a\x01\x67\x1f\x6e\xd0\xb6\x82\xff\x4c\xdb\xe7\xa1\x3e\x4d\xcf\x5f" +
			"\x64\x4e\x26\x30\x7a\xd9\x83\x01\x26\x5f\xb3\xe9\x36\x6d\xf7\x24\x66\xa1\x1d\x1d\xca\xfa\xcd\xdb" +
			"\xda\xe4\x5e\x5b\xf3\x91\xf6\x88\xf5\xaa\xb2\xec\xa7\xca\x39\xf2\x2e\x3e\xaa\x28\x8c\xff\x8e\xeb" +
			"\x1c\xf3\x6e\xb3\x4f\xb6\x2c\x89\xb3\x5b\x66\xcb\xf3\x24\xee\xde\x08\x48\x6d\x4a\x04\x2a\xe6\x96" +
			"\xf1\x70\x87\x0b\x77\x8d\x8b\x4d\x3c\x44\xfc\x9c\x12\x0f\xa5\x50\xfa\x27\x23\x7f\xe1\xc3\x79\x65" +
			"\x0a\xc5\xc5\x74\xa9\x67\xac\x78\x7f\x22\x47\xe6\x27\xe5\x9d\xa3\x03\x1f\x3d\xff\x2c\xde\x2a\xa6" +
			"\xa5\x55\xc5\x69\xbc\x88\xe0\x1e\x28\x86\xce\x71\x29\x46\x79\xbd\xa1\x53\x37\x57\xa0\x9e\xad\xb1" +
			"\x72\xd6\x95\x3f\xb5\x87\x40\x3d\x4b\x13\xd1\x8e\xf2\xda\x9f\xe8\x16\x02\x4c\x1c\xfc\x9b\xec\x20" +
			"\xa1\x69\x40\xa6\xc0\xe8\x30\x39\x65\x4e\xbf\xfc\xd0\xf6\xa3\xbd\x4c\x16\xe0\xda\xd0\x10\x33\x3c" +
			"\x3e\xc9\x2a\x85\xf3\x2c\x12\x44\xb9\xfc\xc1\x6e\x92\x87\x79\x3d\xeb\xed\xcc\x1e\xf5\x13\x7e\x4c" +
			"\xb0\xe8\x76\x0b\x59\x4a\x28\x0a\x2a\xd6\x72\x20\x40\x92\xff\x77\x57\x57\x52\xda\x0d\x31\xed\xc3" +
			"\xb9\x35\x9b\xec\xde\xac\x6b\xeb\x29\x59\xe3\xf2\x90\x3a\x4b\x71\x89\xb5\x24\x07\x57\x70\xa2\x72" +
			"\x3c\xc6\x68\x34\xc2\x37\x65\xca\x25\x15\x78\xaf\x34\x3b\xbc\xa1\xa5\xdd\x46\xe3\x71\x14\x45\xbf" +
			"\x02\x00\x00\xff\xff",
		size: 1711,
		mode: 0644,
		time: time.Unix(1531448235, 296686883),
	},
	"hard_reserved": &asset{
		name: "hard_reserved",
		data: "" +
			"\x4a\x2f\x4e\x2e\xca\x2c\x28\xe1\x4a\x4f\xcd\x33\x48\xce\x4c\x49\xe5\x72\x0f\x76\x0e\xf2\x0c\x08" +
			"\xe1\xf2\x0f\x09\xf1\xe7\xca\x4d\xcc\xcc\x8b\x8e\xb6\x2a\xcf\x2f\x4a\xb1\x8a\x8d\xd1\x8b\x89\xd1" +
			"\x57\x88\xd5\xb2\xe7\x72\xcd\x4b\xcf\xcc\x4b\xc5\x22\xe1\x57\x9a\x93\xe3\x93\x9f\x9e\x9e\x5a\x84" +
			"\x45\x32\x15\xac\x0b\xaa\x99\x2b\x2f\xb5\x9c\x2b\x46\x2f\x3d\xdf\x0a\x10\x00\x00\xff\xff",
		size: 130,
		mode: 0644,
		time: time.Unix(1531448235, 297205615),
	},
	"obfstring.go.tmpl": &asset{
		name: "obfstring.go.tmpl",
		data: "" +
			"\x64\xcd\xbd\x4a\x04\x41\x10\x04\xe0\xf8\xe6\x29\x8a\x61\xcc\xee\xc7\x4c\x10\x2e\xbb\xc4\x17\x30" +
			"\xf1\x0c\xda\x9b\xde\x75\x40\x7b\x96\xde\x5e\x59\x19\xfa\xdd\xc5\x09\x16\xc1\xb4\xfb\xab\xaa\xd3" +
			"\x09\xad\x21\x1d\x9f\x2e\x70\xc7\xad\x8a\x51\x91\x19\x24\x60\xb9\xe9\xf7\x64\x9c\xa1\x3c\x29\xcf" +
			"\x2c\x46\x56\xaa\xa0\x0e\xb0\x77\xc6\x6c\x5a\x64\x44\xec\xf1\x67\xfa\x58\x18\xee\x31\x7c\x91\xfe" +
			"\x6d\x3c\xe3\xe5\x55\x17\xe1\x16\x76\xad\x1d\xa0\x24\x23\x23\x95\xbc\xee\x91\xde\xf0\x78\x46\x3a" +
			"\x5e\xc8\x08\x07\xf7\xb0\xeb\xa4\x0c\xf8\xac\xb9\x1b\x3c\x6c\x77\x4c\x5a\xc4\x06\xc4\xab\x5c\x2d" +
			"\x62\xd3\x2c\xf9\xbf\xb9\x5f\xef\xd6\x3d\xe2\xef\x42\xff\xb5\xd6\x9d\x7b\xf0\x9f\x00\x00\x00\xff" +
			"\xff",
		size: 240,
		mode: 0644,
		time: time.Unix(1531448235, 297579907),
	},
	"preload.gs": &asset{
		name: "preload.gs",
		data: "" +
			"\x8c\x92\x3f\x6f\xea\x30\x14\xc5\xf7\x7c\x8a\x23\x26\xfb\xc1\x8b\xc2\x5b\xde\x90\x52\x89\x3f\x5d" +
			"\x3a\x94\x01\xb6\xb6\x83\x81\xeb\xe0\xd6\xd8\xd1\xb5\xd3\x2a\xaa\xf8\xee\x15\x09\xa0\x06\x51\xb5" +
			"\x63\x6e\xce\xf9\xdd\xa3\x7b\xac\x2b\xb7\x8e\xc6\x3b\x2c\x22\x1b\x57\x2c\xfd\xa4\x8e\x34\x66\x56" +
			"\xb5\x08\x12\x1f\x09\xf0\xa6\x18\x1b\x15\x15\x46\x78\x7c\xce\x13\x40\x7b\x86\x38\x4c\x0d\x46\xc8" +
			"\x72\x18\xdc\x20\xa4\x96\x5c\x11\xb7\x39\x4c\xbf\xdf\xfa\xd0\xb8\xd2\xb2\x0a\x5b\x11\xd2\xf5\x56" +
			"\xf1\xd4\x6f\x68\x1c\x85\x91\xf2\x80\xd9\x27\x00\x53\xac\xd8\x35\xc2\x3c\xd9\x27\xc9\x39\xcd\x39" +
			"\xc5\xd2\xb7\xc1\x84\x6a\xa9\x47\x47\x3b\x4c\x35\xfb\xdd\xf4\x48\x4e\x55\x59\xda\x5a\xb4\x7f\x06" +
			"\x50\xb2\x4b\x9c\x55\xbb\x52\xf8\xd5\x4b\x07\xd3\x7b\x72\x3d\xf4\x71\xbf\x98\x3f\xa4\xa1\x31\x1a" +
			"\x5d\x1f\x54\x03\xb8\xca\xda\x01\xfe\x5d\x50\x26\xa4\x3d\xd3\x8c\x4a\xeb\x6b\xd1\x41\x45\xae\xe8" +
			"\x62\xe3\x15\x95\x56\x36\x5c\xc8\xc6\x3a\x12\xff\x8e\x38\x77\x77\xcc\x9e\x7f\x44\x2e\x2c\x51\x29" +
			"\x02\xad\xbd\xdb\x7c\x69\x31\x44\xc5\x11\x23\x38\x7a\xc7\x4c\x45\x12\x32\x2d\x28\x2e\xcd\x8e\x84" +
			"\xfc\xae\xd8\x21\xfd\xef\x74\x6a\x34\x84\xb8\x06\xc0\xdf\x96\x2f\x71\x8b\xd3\x6a\xfc\xc1\x30\xcb" +
			"\x32\x79\x32\x03\x2b\x26\xf5\x9a\x37\x1f\xfb\xe6\x0d\x74\x0f\xb6\xaa\x8a\xa9\x77\xc1\x5b\xba\x7a" +
			"\x8a\xcf\x00\x00\x00\xff\xff",
		size: 685,
		mode: 0644,
		time: time.Unix(1531448235, 297781319),
	},
	"soft_reserved": &asset{
		name: "soft_reserved",
		data: "" +
			"\x4a\xcf\xcf\x4f\xcf\x49\xe5\x4a\xcf\x2f\xc8\x4e\xe7\x0a\x0d\x88\xe0\xca\x2f\x29\xc9\xe7\xf2\x2f" +
			"\x29\xc9\x07\x04\x00\x00\xff\xff",
		size: 26,
		mode: 0644,
		time: time.Unix(1532895396, 507410995),
	},
	"vm_file.go.tmpl": &asset{
		name: "vm_file.go.tmpl",
		data: "" +
			"\xec\x5a\x6d\x6f\x1b\xb9\x11\xfe\x6c\xfd\x8a\xe9\xd6\x2e\x76\x03\x79\x95\x5c\x8b\x16\x70\xeb\x02" +
			"\x8e\xa5\xcb\xf9\xe2\xd8\x81\xe5\xf3\xa1\xf0\x19\x0e\xb5\x3b\x5a\x33\x5e\x71\xf7\x48\x4a\xb6\x62" +
			"\xe8\xbf\x17\x43\x72\x5f\xbd\x92\x95\xcb\xa1\x45\x81\x7e\x08\x22\x93\xc3\x79\x9f\x87\x43\x72\x73" +
			"\x16\xdd\xb3\x04\x61\xc6\xb8\xe8\xf5\xf8\x2c\xcf\xa4\x06\xbf\x07\xe0\x4d\x96\x1a\x95\xd7\xdb\xf1" +
			"\xa2\x6c\x96\x4b\x54\x6a\x90\x7c\xe1\xb9\x47\x53\x91\x5c\xe6\x3a\x1b\x30\x9a\xaf\xfe\x8c\x78\x7e" +
			"\x87\x92\x56\xa0\x88\xb2\x98\x8b\x64\x30\x61\x0a\xff\xfa\x17\x43\x34\x9d\x69\x9a\xe2\x99\xd7\xa3" +
			"\x3f\x13\xae\xef\xe6\x93\x30\xca\x66\x83\x04\xc5\xeb\x88\xc7\x38\x48\x54\x24\x79\xae\x07\x28\x12" +
			"\x2e\xd0\x6b\x91\xc9\x6c\x82\x52\xdf\x4b\x3e\x43\x31\xc8\xb4\xce\x88\xe0\xe9\x09\xf8\x14\x76\xc3" +
			"\x1f\x98\x1a\xe2\x64\x9e\x24\x5c\x24\x23\xc1\x26\x29\xc6\xb0\xbf\x5a\xf5\x00\x5e\x90\x15\x9b\x55" +
			"\xa4\x36\x31\xdb\x07\x14\x31\x98\x75\x35\xce\xa7\xd9\xd7\xf3\x4d\x33\xe2\x3a\x50\x9a\x89\x98\xc9" +
			"\xb8\xc5\xbe\x07\x30\x18\xc0\x89\xf1\x36\x17\x09\xcc\x98\xba\x57\x56\xa8\x64\x22\x41\xd8\xe5\x79" +
			"\x1f\x76\x67\x1c\x0e\x0e\x61\x37\x3c\xe5\xe2\x1e\x65\xf8\x81\xa9\x7b\x8c\xed\x2a\x05\x4e\x8b\xa7" +
			"\x27\xa2\x0b\xcf\xf0\xe1\x28\xe5\x8c\x86\xc1\xa3\x31\x9e\xc3\x6a\xe5\x5c\xe4\xa4\x06\xbd\xde\x82" +
			"\x49\x13\x5d\xd2\xc5\x49\xba\xed\xc3\x2e\xce\x26\x18\x5b\x59\x23\xfa\x59\x72\x1f\x0c\x8c\x00\x33" +
			"\x1f\x9e\x0c\x89\xfb\x5d\x96\xc6\x0a\xf4\x1d\x42\xcc\x34\x83\x69\x26\xc1\x4c\xc7\x18\xc3\x94\xa7" +
			"\x58\x5b\x70\x2e\x79\x72\xc6\x66\x58\xd7\xb5\xce\xea\xd0\xaa\x6a\x87\x86\xc4\x8d\x54\x6e\xba\x2a" +
			"\xe8\xf5\x9c\x12\x6e\xd1\x83\x64\xb9\x95\x9f\xa0\x40\xc5\x15\x5c\x7d\x30\x5a\x18\x9a\x42\x9c\x5e" +
			"\xe6\x58\x5f\xa5\xb4\x9c\x47\x1a\x9e\x7a\x00\x23\x78\x65\x33\x2c\x1c\x99\xff\x7a\x00\xef\xe1\xfa" +
			"\x86\xf2\x7d\xcb\x8c\x1a\xc2\xab\x22\x6f\xc2\xa1\xfb\xd1\xd4\x7a\x65\xb4\x3e\xc3\x87\x9a\x0a\x91" +
			"\x44\xa6\xb1\xa9\xba\x9c\x0b\xcd\x67\x68\xf4\xb7\x99\xd3\x34\x63\x3a\x17\x51\x93\x8d\x1f\xc0\xab" +
			"\x1a\x53\x32\x48\x23\x85\xce\xd9\x74\x86\x0f\xbe\x57\xe7\xe1\xf5\xad\x97\xed\x02\xaf\x0f\x7f\x7e" +
			"\xdd\x07\x6f\xf4\x88\xd1\x5c\xa3\x17\x6c\x95\xea\x2c\x25\x09\x45\x32\x93\x8c\xb1\xfb\x7d\x6a\xf2" +
			"\xdc\x17\x3c\xed\x83\xe7\x0a\xb7\x10\x58\x29\x30\x65\xa9\x42\xf7\x5f\x60\x38\x6a\x0c\xc7\xa8\xdd" +
			"\x6a\x96\x06\x1b\xca\xef\x59\x18\x9c\x52\xb1\x31\xbb\x0c\x04\x19\xae\x31\x68\x64\x3c\x40\x46\x34" +
			"\x7f\xaa\xec\x7f\x32\x4b\x47\x07\xa0\xb1\x5f\xe4\xe4\x8b\xf1\x06\x18\x1e\x40\x5c\x2e\xa8\xa9\x49" +
			"\xff\x24\xea\xb9\x14\x90\xb9\xa0\x1b\x59\xdf\xcf\x45\xa4\x79\x26\xde\xe3\x12\x3c\x8b\xaa\xb7\x4c" +
			"\x29\xd4\xca\xa3\xa8\x71\x57\xc3\x76\x08\xb8\xd0\xd9\xd7\xa7\x85\x9f\xd5\x33\x21\xd8\x46\xb0\x1f" +
			"\x00\x4a\x49\xb5\xd2\x00\x1b\xe4\x71\x27\x08\xec\xb7\x50\x80\xc7\xb6\x6a\xd7\x57\x78\x16\x8e\x42" +
			"\x07\x50\xd7\x5e\xb5\xc6\xbb\x81\x43\x20\xa5\xfd\xc0\x55\x1a\x3c\x39\xcf\x0e\x06\xf0\x93\xa0\x5d" +
			"\x08\xa5\x29\xed\x9c\xfe\xe7\xfa\x0e\xa2\x4c\x28\x0d\x31\x46\x29\x93\x18\x03\x9b\x64\x0b\x74\x6b" +
			"\x9c\xc7\x2b\xe3\x87\x7e\x0b\x5a\x6c\x92\xad\xaa\x64\xb0\xa6\xb8\x85\x82\xa7\x6b\x83\x95\x4b\x4c" +
			"\x33\x16\x37\xc2\x44\xa1\x29\x42\xe2\xe6\x21\xe5\x13\xc9\xe4\xf2\x5b\x43\x54\x13\xd7\x08\x4e\x91" +
			"\x54\xe1\x28\x3c\xcd\x58\x3c\x36\x12\xfc\x82\x3c\x4c\x94\xd7\x6f\x3a\xfb\xf6\xf6\xe3\xc5\xe8\xf4" +
			"\xfc\x68\xe8\xdd\xf8\x41\xf0\x52\x2e\x5a\x8d\x8d\x91\xc4\xcf\x9a\xd8\x61\xc6\xf3\xd4\xbc\xfa\xf0" +
			"\x95\xd9\x57\x89\xda\xc6\xc0\x16\x70\xb4\x4c\x1c\x9d\x5d\x5e\xfc\xeb\xe3\xf9\xc9\xd9\xe5\x66\x2b" +
			"\xd1\xa1\x1b\x59\xe0\x7e\x3f\xdb\x32\x98\x36\x23\x28\xb4\x5c\x42\x9e\x71\xa1\xc1\x8f\x71\xca\x05" +
			"\xc6\x30\x59\xc2\x02\xa5\xe2\x99\xe8\xc3\x5c\xcd\x59\x9a\x2e\x61\x88\x79\x9a\x2d\x49\xea\x96\xf6" +
			"\xd7\x94\x68\xd7\xdd\x8b\x88\x93\x85\xc3\xf0\x44\x7c\xc6\x48\x1b\x92\xe3\x4c\xa8\x2c\x45\xff\x19" +
			"\x4c\x92\x7f\xec\xda\x23\x53\xe4\x86\xe2\xb6\x4f\xd2\xa8\x92\x69\xfa\x98\xa5\x69\xa1\xd7\xcf\x5c" +
			"\xdf\x5d\xf2\x19\x66\x73\xed\x7b\xd6\x20\xb3\x03\xb8\x60\xa0\x94\x2f\x25\x8e\x60\x9a\x2f\xac\x63" +
			"\xb9\xd1\xcf\xb5\x02\x4b\xc1\x66\x3c\x32\x8e\x4a\xa9\x5b\x89\xc1\x52\x9a\xaa\x27\x26\xaa\x2b\x95" +
			"\x7e\x27\x80\xab\x94\x6a\x38\x9a\x9a\x1d\x72\x84\x19\xe9\x81\xf9\x7d\x68\x8a\xdf\xf6\x5f\xfb\xfb" +
			"\xf0\x76\xf4\xee\xe4\x0c\xce\x8e\x2e\x4f\xae\x46\xf0\xf1\xe8\xf8\xfd\xd1\xbb\x11\x9c\x7c\xf8\x78" +
			"\x7e\x71\x39\x6e\x40\xa4\x50\x7d\xd8\xcd\xef\x13\x8b\x8f\xef\xb2\x8f\xb6\x6f\x7e\xbb\x24\x8d\x55" +
			"\xce\x22\xac\xa3\x65\xd5\xd9\x91\xce\xf9\x7d\xe2\x92\xf8\x23\xd3\x77\xe4\xba\xb9\x88\x51\x82\x28" +
			"\x97\x16\x54\xb6\xc3\x2b\x6a\xcf\xcf\x24\x4f\xb8\x30\x4e\x7d\x60\xca\x50\x09\x55\xa2\xdb\xad\xc8" +
			"\xbb\xd7\xd1\x8e\x57\x74\x03\xc6\x33\x4e\xd9\x02\x72\x2b\x5d\x0e\xec\x4e\xfd\x4c\x41\xaf\xef\x48" +
			"\x89\x65\x8d\xa8\x2c\x4c\x37\x3d\x5e\xce\x26\x59\x7a\x49\xf9\x77\x00\x33\x96\x5f\x2b\x2d\xb9\x48" +
			"\x6e\x5e\x35\xc4\x53\xc8\x9e\x56\xc5\x9a\xcb\x65\x8e\x6a\x03\x35\xcd\x57\xd4\x94\xf9\x7a\x13\xb9" +
			"\x21\xa8\xe8\xaf\x98\xdc\x44\x7d\xc5\x64\x41\x5b\xb6\xa4\x2e\xc2\x53\x1e\x3f\xf6\x61\x77\x6a\x22" +
			"\x4c\xc6\x8e\xe7\x51\x84\x4a\x4d\xe7\x69\xba\x34\x1d\x78\x4c\x86\xa8\x5a\x57\x30\x18\xc0\x51\x4c" +
			"\x07\x9d\x32\xcb\x2d\x90\xa0\x34\x89\xdd\xaa\x00\x68\x79\x31\xa4\xbf\xa7\x65\x42\x53\xe4\x74\x06" +
			"\xca\xb8\x14\x34\xf9\xd4\x89\xb9\x15\xd3\xce\x40\x9b\xf5\x3c\x7e\xec\x8c\xb9\x71\xba\x63\xd0\x88" +
			"\x63\x43\x62\x19\x49\x80\x31\x4f\x04\xd3\x73\x59\xd1\x95\x23\x4d\x42\x5a\x7e\x00\x59\x58\x6b\xaa" +
			"\x0c\xb9\xf9\x59\x90\xad\x4a\xdd\xbb\x93\x34\xac\xa5\xce\x75\x87\x5e\xd4\x30\x6c\x61\x77\x11\xc3" +
			"\x6a\x8b\xaf\x87\x94\x8e\x36\xba\x8c\xe7\xbb\xcc\xa4\x5e\x33\x7e\x43\xd3\x5f\x50\x08\x19\x98\x33" +
			"\x03\x33\xa7\xa8\xe2\x3c\xd1\x0e\x97\x0e\xeb\xdd\x0e\x99\xa7\xd7\xaa\xa8\x43\xc2\xa8\xae\xd8\x98" +
			"\x14\xef\x8a\x8d\x7e\x56\x61\x00\xdf\xb3\x48\x67\x72\xf9\xdc\xe3\x05\xff\x1a\x29\xc7\x34\xde\x94" +
			"\xfe\x86\xe0\x69\xfb\x20\x19\x87\x5d\xb7\x54\xb3\xa1\x79\xd9\xee\xcd\xb1\x89\x6c\xb9\x45\xb5\xf0" +
			"\xd8\x5a\xaf\xc5\xe7\x56\x44\x6b\xa5\x44\x6b\xbd\x6b\x11\xa1\xcb\xbd\x51\x87\x7b\xaf\x58\x3a\xc7" +
			"\x83\x6e\x04\x0e\x1b\x8b\xb6\xf6\x9a\xb5\xc3\xba\x2d\xb2\x79\xea\x9c\xf6\xb2\x39\x9b\x9d\xb6\xb0" +
			"\x4e\x5b\xb0\xd2\x6b\x57\x2c\xe5\x31\x81\x5e\xc3\x6d\x8b\xb5\x72\x16\x6c\xad\xdf\x08\x1b\xbb\xbc" +
			"\xb6\x60\x1d\x6e\xab\xa1\xc5\x27\x47\x54\x87\x8b\x4f\x5f\xe1\xe0\x8a\xff\xd6\x1e\x26\x83\xaf\xdb" +
			"\xca\x59\x17\x6f\x61\x7a\xdb\xc7\xe5\xae\x6d\x1a\x1a\xc2\x02\x87\xdc\xc5\xe5\x58\x57\x13\x4c\x6b" +
			"\x6c\x43\x51\xf5\xa8\x8d\xdd\xd6\xf6\xb2\x66\xbf\xf6\xfa\x6b\x4d\xb1\x5b\x39\x9f\x1a\x5e\x7f\x30" +
			"\xdd\x49\x79\x34\xaa\x75\x65\xd6\x2b\x85\xa2\xfb\xfb\xbd\xf6\xc9\xc6\xb6\x33\xa3\xb3\xe1\xfa\x66" +
			"\x66\xfb\x26\xaf\x38\xe8\xdf\xba\x43\xce\x36\xed\x5e\xb1\xa6\x3a\x18\xfd\x07\x1a\xbf\x2e\x45\xb7" +
			"\x6c\x01\x01\x84\xce\xa9\x08\xae\x5b\x18\x59\x34\x4b\xab\x6f\xee\x12\x5d\x53\x5f\x5e\x95\xf0\x89" +
			"\xea\x6e\x12\x0b\x0a\x38\x75\xbe\x73\x3a\x1c\x54\x2d\xdf\x7f\xa3\xe3\x73\xb9\xfb\x9b\x7b\x3d\x97" +
			"\xb0\xff\x6f\xb1\xfe\xb7\x5b\xac\xae\x2d\x89\x6a\xe7\x10\x58\x9e\xa3\x88\x7d\xa1\xf3\xcd\x00\xd7" +
			"\xc4\xda\x06\xd2\x3e\x83\x8d\x6e\xac\x6d\x23\x6d\xad\xa6\x68\x15\xa9\x40\x82\xba\x70\xb4\x81\xa2" +
			"\xeb\x2f\x81\x8c\x6b\xcf\x87\xef\xdd\xb4\xc3\x39\x34\x6f\x1b\xe4\xb0\x7b\xb4\x77\x3d\xed\x5b\x04" +
			"\x73\xec\xb6\xb0\xd5\xe0\xd3\xbc\xe9\x7a\x76\x63\x75\x3e\xbc\x18\x76\x88\xbf\x18\x42\x94\x09\xcd" +
			"\xf8\x66\x05\x50\x98\x61\x8c\x0b\xf9\x84\x73\x2d\x3e\x87\x4e\xfe\x53\x6f\xa7\x76\xdb\x6f\x2b\x70" +
			"\x62\x01\x6a\x58\x72\x7f\x8f\xcb\x23\x29\xd9\xd2\xc4\x68\xc7\x2c\xe0\x53\x98\x65\xb1\x59\x01\x7f" +
			"\x73\xe3\x26\x94\xb9\xe4\x42\x4f\xc1\xfb\x45\xfc\x62\xae\x75\x1c\x7d\x11\x61\xfa\xab\xa4\x79\xfd" +
			"\xb8\xf7\xd8\x07\x8f\x24\x9a\xb9\xea\x6a\xb6\x6d\xfb\x10\x78\x69\x72\xd6\x2c\xf8\xc6\x13\x83\xbb" +
			"\x32\xdd\xb8\x7f\xd4\x2f\x06\x15\x58\x9c\x6a\x84\x63\x52\xde\x90\x30\x54\xe1\x19\x3e\x1c\x9b\xb7" +
			"\x2b\xbf\x15\xc1\x17\x52\xca\xf9\xb7\xb8\x07\x8e\x27\x6f\x88\xa3\xc0\x07\xdf\xbc\x9d\x85\x6f\xe7" +
			"\xd3\x29\xca\xc0\x4c\x7d\xd7\x3d\xb5\xa3\xa4\xe9\x80\xed\xe8\x19\x3e\x5c\x20\x8b\x51\xfa\x96\xb5" +
			"\xaf\x8c\x0a\x14\x5c\xbe\x80\x6b\xd2\xf5\x6d\x9a\x45\xf7\x63\xfe\x05\x8b\xf7\x0a\xa5\x25\xb2\x19" +
			"\xf1\xb0\xef\x6f\xc4\xe4\xfc\xfb\xb7\xfe\xa4\x0f\x7c\x71\x7d\x70\x13\xf4\x76\x8c\x47\xd1\x98\x6b" +
			"\x1f\xe4\x88\x66\x68\x07\x7d\x37\x32\xd6\xf1\xc8\xbd\xda\xf5\x41\xc9\x88\xe4\xa2\x88\xac\x3a\x06" +
			"\xfa\x1c\xfb\xb1\x91\x67\xc7\x9f\xc6\x07\x4e\x7e\x1f\x2e\x0e\xc0\xc9\x59\x59\xaf\x55\xb7\x50\x3c" +
			"\x0b\x8f\xb3\x7c\xe9\xc7\x93\x37\xfd\x8a\x69\xf0\xf7\xed\x1c\xbb\x93\x7c\x91\x25\xab\xe4\x0b\xcf" +
			"\x6b\x6e\x8a\x27\x6f\x82\xde\x4e\x3b\x44\x3b\x3b\x6d\x3e\x3b\xab\xde\x8e\xd3\xa7\xae\xce\x77\x7d" +
			"\x48\xbe\xc8\xad\x39\x24\x5f\x64\x78\x9c\x66\x0a\xfd\xa0\x57\x10\xc4\x93\xef\xc2\xb7\x14\x3c\xbf" +
			"\xb8\x8d\xac\x4e\x94\xc3\x5a\x97\x64\x77\x37\x28\xf1\xf7\x67\x7b\xd5\xad\x7a\xcd\xd3\xea\xb4\xf1" +
			"\xe0\xb7\x6e\x7b\x5c\xb5\x8b\xa7\xb6\x3b\x14\x65\x64\xda\x32\xd9\x2c\x22\x4b\x56\x5e\x5e\xad\xdf" +
			"\x25\x37\xb4\x61\x6d\x79\x3e\xd9\x07\x99\xd6\x59\xc9\xe0\x98\xa5\x69\x60\x87\x4c\xf3\x6f\x82\x4b" +
			"\x1b\xb9\x4c\xe6\x33\x14\x1a\xc6\x4c\x70\xbd\x84\xe3\x3b\x8c\xcc\xb3\x27\x9f\x42\x8a\xc2\x70\x0a" +
			"\x0b\xa2\x53\xae\x74\x00\xff\x24\xa1\x29\x0a\xab\xf7\x91\x4c\x54\xf1\xe8\xd5\xb8\x41\xbe\x60\x5c" +
			"\xa1\xef\x31\xb7\xd6\xeb\x83\xa7\xb3\x0c\x66\x4c\x2c\xa1\x18\x54\x90\x13\x76\xc4\xd4\x01\x94\x5e" +
			"\xd9\x53\xc5\x6b\x55\x73\x6f\x0c\x5c\x4d\xaf\xd7\xec\x1f\xdf\xa4\xd9\x14\x1f\xbe\x45\xb1\x46\xd3" +
			"\xc9\x2c\xa6\xdb\x33\x61\xa9\x4c\xad\xd1\xb4\xdd\x4a\x95\x7b\x65\x1c\xfe\x48\xfc\x59\xed\x26\x85" +
			"\x90\x86\xd5\x06\x4d\xc8\x59\x38\x7a\xd4\x63\x9e\x14\x44\xb2\x4e\x51\x56\x66\xc3\x45\x7e\x8d\x22" +
			"\x08\x47\x8f\xb4\x65\xfb\x5b\x1c\x75\x6a\x1e\xfb\xac\xd0\x2c\x23\x37\x44\xd9\x3c\x8d\x41\x64\x1a" +
			"\xec\x58\xe9\x3a\xd8\x8b\x21\x9b\xb6\xbc\xd6\xd0\x6e\x8d\x0b\x8b\xee\x49\x3d\x70\x1d\xdd\xc1\x82" +
			"\x2c\x68\xd8\x15\xfa\x7a\x99\x63\xe0\x14\xb4\x57\xf6\xf8\x6b\xcd\x19\xde\xf5\x8d\x69\x43\xa7\x2c" +
			"\xc2\xa7\x95\x57\x5d\x09\x45\x4c\x21\x5c\xdf\xd8\x5d\xe7\xa0\x6c\xe9\xf8\x54\xd9\xd3\x46\x6d\xd5" +
			"\xd3\xaa\x9c\xa6\xf2\xbc\xed\xc3\xa3\x55\x84\xe2\xba\x80\xaa\xb7\xb4\xcb\xcb\x86\x8b\x4f\x55\x1f" +
			"\x1e\x83\x72\xba\x62\xd3\x08\xde\x21\xad\xaa\x77\x6f\xd5\xd1\x97\x4f\xc9\x94\x33\xc4\x58\x7d\x60" +
			"\x79\x4e\x68\xd5\x34\xc0\x06\x9e\xe6\x30\xbe\x5c\xe6\x58\x7c\x5c\x70\xb0\x4e\x54\x2b\x53\xfc\x45" +
			"\xd0\x21\xb9\xc6\xba\xa4\x2c\x38\xb6\xf8\xb5\xa2\xd1\x5a\x14\x34\x0d\x79\x3b\xe7\xa9\x3e\x11\x97" +
			"\x92\x09\x95\x32\x0a\xf4\x05\xfe\x3a\xe7\xb2\x7a\x2c\x6e\xc8\x76\xe4\x3f\x8e\xc9\xb2\x6f\x36\x2a" +
			"\xc6\x29\x9b\xa7\xfa\x60\x6d\x2a\x9b\x7b\xc5\x28\x13\xee\x49\x89\x32\xba\x4c\x60\x33\x37\xe3\x6a" +
			"\xc6\x28\x0f\xf7\x29\xc1\x31\xa2\xc6\x6e\x4f\xf5\x21\xc9\x34\xec\x5d\x16\x40\x50\x53\xc4\xeb\xc3" +
			"\xe2\xd9\x13\xe7\xaa\x85\x0b\x92\xcc\xe8\xc3\xae\x2c\x81\xe1\xc2\xb5\xb6\x1b\xb0\xc1\x92\x58\x64" +
			"\x90\x2d\x64\x90\xb5\x41\xe3\x1a\xd9\x40\x86\xc6\x11\xc1\x4c\xa3\x3e\x45\x41\xd2\x4b\x9c\x2c\x34" +
			"\xa8\xbd\xf1\x27\xba\xa4\x7c\x5d\xfb\xec\x84\x36\x11\xb3\x91\xb5\x8e\x78\xe5\x87\x24\xd3\xf0\x1d" +
			"\x0a\x94\x4c\xa3\x65\x3a\x36\x05\x07\x9e\xf4\xaa\xd8\xd5\x37\xbb\xe7\x17\x4f\x0d\x58\xf0\x9b\x3c" +
			"\x8f\x64\x52\x30\x64\x5e\x2b\xe1\x08\x07\x9c\xc6\x6f\xa0\x7e\x52\x1d\x73\x91\xa4\x58\x64\x00\x35" +
			"\xf2\xf8\xa8\x61\x1f\x98\xd6\x38\xcb\x35\x01\xbc\x9b\xd3\x77\xcc\xfc\xe9\x2e\x92\x4c\xd6\x5c\xb1" +
			"\xb4\x89\xa6\xe7\xb4\x83\x5e\x66\x66\x0f\xf5\xe5\xeb\xa2\xde\xbb\x11\xb4\x2b\xf1\xec\x88\x45\xd0" +
			"\x22\xfb\x60\xca\x78\x8a\xb1\x01\x1c\xb7\xe2\x35\x18\xb0\x3b\xdc\xbb\x0c\x60\x1f\xf6\x16\x5e\x1f" +
			"\xe4\x6b\xa3\x4a\xd0\x3a\x6a\xba\x05\x56\xd9\xb2\x14\x52\x85\x0d\x37\x5c\xde\x71\x55\x61\xf2\x1d" +
			"\x53\x30\x9b\xa7\x9a\xe7\xa5\x6b\x14\xec\xbb\xeb\x24\x72\xb0\x39\xf1\x31\xf8\x71\x0c\xcc\x1c\x41" +
			"\x4c\x6b\xdf\xe9\xc9\x28\x9b\xe5\x4c\xf3\x09\x4f\xb9\x5e\x3a\x79\x9f\xd5\xf9\xe4\x73\x87\xdf\xce" +
			"\x27\xc4\xdf\xff\x74\x7d\xf3\xe9\x37\x38\xce\x3e\xf6\x37\xf7\x1e\xfb\xfd\x4e\x65\x0b\x53\x8a\x27" +
			"\xc2\x54\xb1\xfd\xba\x88\x8e\xf1\xce\x7f\x0d\xdf\xb9\x1f\xcd\xca\xec\xc3\xee\xed\xda\xc2\x74\x8e" +
			"\x74\xc5\x68\x9b\xa8\x67\x25\x59\xdd\x40\x1a\x1f\x84\x63\x74\xef\xe7\x8e\x88\xc2\x58\xfb\x33\xa8" +
			"\x6d\x45\xdd\x7e\xf8\x86\x14\xda\x8b\x9f\xe7\x50\x4d\x76\x53\x93\x86\x7b\xaa\xe4\x6a\xa2\x6a\xdd" +
			"\x01\xc5\x99\x9b\x0a\x33\x86\xcc\x44\xb6\x99\x91\xd6\x03\xb6\x52\x82\xe7\x17\x16\xad\x2c\xed\xcc" +
			"\x51\x51\x14\xa7\xea\x9b\x34\x32\x52\x4b\x0a\x26\xe2\x42\xd6\x5c\xb8\xcf\x04\xc2\x3a\x16\xfd\xae" +
			"\x38\x53\xc4\x81\x12\xf9\xa7\x42\x5c\x65\x5d\xcd\xb6\x55\xaf\x57\x83\xff\xaf\x7e\xaf\xae\x16\x68" +
			"\xb1\xf6\xb1\xec\xd9\x51\xa3\x7c\xd9\x72\x5f\xe7\x28\x60\x02\x98\x39\xab\xf0\x49\x5a\x42\xb6\xd9" +
			"\xdb\x5c\xdc\x32\xb9\xfe\x4d\x6d\xdb\x13\x47\x21\x76\xdb\x23\xc7\xc2\x7e\xb6\x46\xa7\xee\xf5\xaf" +
			"\x0f\x46\xba\xfb\x06\x62\x33\x02\x2f\xec\x67\x6a\x1b\x2e\x04\x7e\x17\xe8\x5d\x38\x25\x82\xe6\x75" +
			"\x95\xc3\xdc\x2a\xde\x2e\x7c\xc5\x4f\xca\x69\x46\xa0\x19\xc3\x0f\x8c\x4b\x05\x13\x4c\xb3\x87\x9e" +
			"\xb9\xc0\xde\xff\x77\x00\x00\x00\xff\xff",
		size: 11238,
		mode: 0644,
		time: time.Unix(1533644760, 333649978),
	},
}

// AssetAndInfo loads and returns the asset and asset info for the
// given name. It returns an error if the asset could not be found
// or could not be loaded.
func AssetAndInfo(name string) ([]byte, os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	a.once.Do(func() {
		fr := flate.NewReader(strings.NewReader(a.data))

		var buf bytes.Buffer
		if _, a.err = io.Copy(&buf, fr); a.err != nil {
			return
		}

		if a.err = fr.Close(); a.err == nil {
			a.bytes = buf.Bytes()
		}
	})
	if a.err != nil {
		return nil, nil, &os.PathError{Op: "read", Path: name, Err: a.err}
	}

	return a.bytes, a, nil
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	data, _, err := AssetAndInfo(name)
	return data, err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}

	return names
}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	return restore.Asset(dir, name, AssetAndInfo)
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	return restore.Assets(dir, name, AssetDir, AssetAndInfo)
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree

	if name != "" {
		var ok bool
		for _, p := range strings.Split(filepath.ToSlash(name), "/") {
			if node, ok = node[p]; !ok {
				return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
			}
		}
	}

	if len(node) == 0 {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	rv := make([]string, 0, len(node))
	for name := range node {
		rv = append(rv, name)
	}

	return rv, nil
}

type bintree map[string]bintree

var _bintree = bintree{
	"debugger.gs":        bintree{},
	"entrypoint.go.tmpl": bintree{},
	"hard_reserved":      bintree{},
	"obfstring.go.tmpl":  bintree{},
	"preload.gs":         bintree{},
	"soft_reserved":      bintree{},
	"vm_file.go.tmpl":    bintree{},
}
